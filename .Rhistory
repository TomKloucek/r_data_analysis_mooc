install.packages('knitr', dependencies = T)
getgwd
getwd
getwd()
setwd('/home/tomask/Documents/Personal/DataAnalysis/udacity_course/')
library(knitr)
reddit <- read.csv('data/reddit.csv')
table(reddit$employment.status)
summary(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
levels(reddit$age.range)
library(ggplot2)
install.packages('ggplot2', dependencies = T)
levels(reddit$age.range)
str(reddit)
levels(reddit$age.range)
qplot(data = reddit, x = age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
is.factor(reddit$age.range)
reddit_agerange = reddit$age.range
reddit_agerange
is.factor(reddit_agerange)
reddit_agerange_factor = factor(reddit, labels = reddit$age.range)
reddit_agerange_factor <- factor(reddit, labels = reddit$age.range)
str(reddit)
str(reddit$age.range)
str(reddit$age.range)
unique(reddit$age.range)
levels(reddit$age.range)
reddit_agerange_factor <- as.factor(reddit$age.range)
levels(reddit_agerange_factor)
reddit_agerange_factor_ordered <- factor(reddit$age.range, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above")                                                                      [7] ))
reddit_agerange_factor_ordered <- factor(reddit$age.range, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"))                                                                      [7] ))
reddit_agerange_factor_ordered <- factor(reddit$age.range, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"))
qplot(data = reddit, x = age.range)
reddit$age.range <- factor(reddit$age.range, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above"))
qplot(data = reddit, x = age.range)
pf <- read.csv('data/pseudo_facebook.tsv', sep='\t')
View(reddit)
View(reddit)
View(pf)
pf <- read.csv('data/pseudo_facebook.tsv', sep='\t')
names(pf)
read.delim('data/pseudo_facebook.tsv')
install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf)
install.packages("ggplot2")
qplot(x = dob_day, data = pf)
library(ggplot2)
qplot(x = dob_day, data = pf)
install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf) + scale_x_discrete(breaks=1:31)
install.packages("ggplot2")
install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf) + scale_x_discrete(breaks=1:31)
install.packages("ggplot2")
library(ggplot2)
qplot(x = dob_day, data = pf) + scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31)
# rozdelime histogram na 12 ruznych mensich histogramu dle mesice
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31) + facet_wrap(~dob_month)
# rozdelime histogram na 12 ruznych mensich histogramu dle mesice
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31) + facet_wrap(~dob_month, ncol = 4)
# rozdelime histogram na 12 ruznych mensich histogramu dle mesice
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31) + facet_wrap(~dob_month, ncol = 6)
# rozdelime histogram na 12 ruznych mensich histogramu dle mesice
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31) + facet_wrap(~dob_month, ncol = 4)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
qplot(x = friend_count, data = pf) + geom_histogram()
qplot(x = friend_count, data = pf) + scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
sum(x = pf$www_likes)
sum(x = pf$www_likes, data = subset(pf, !is.na(gender)))
total_likes <- aggregate(likes ~ gender, data = df, FUN = sum)
total_likes <- aggregate(df$likes ~ df$gender, data = df, FUN = sum)
total_likes <- aggregate(pf$likes ~ pf$gender, data = pf, FUN = sum)
total_likes <- aggregate(pf$www_likes ~ pf$gender, data = pf, FUN = sum)
qplot(x = gender, y=friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot')
qplot(x = gender, y=friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') + coord_cartesian(ylim = 1000)
qplot(x = gender, y=friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') + coord_cartesian(ylim = c(0,1000))
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y=friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') + coord_cartesian(ylim = c(0,250))
by(pf$friendships_initiated, pf$gender, FUN = avg)
by(pf$friendships_initiated, pf$gender, FUN = average)
by(pf$friendships_initiated, pf$gender, FUN = summary)
qplot(x = gender, y=friendships_initiated, data = subset(pf, !is.na(gender)),geom = 'boxplot') + coord_cartesian(ylim = c(0,250))
by(pf$friendships_initiated, pf$gender, FUN = summary)
mobile_chekin <- NA
pf$mobile_chekin <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_chekin <- factor(pf$mobile_chekin)
summary(pf$mobile_chekin)
pf$mobile_chekin/length(pf)
pf$mobile_chekin/length(pf$mobile_chekin)
pf$mobile_chekin//length(pf$mobile_chekin)
(pf$mobile_chekin > 1)/length(pf$mobile_chekin)
length(pf$mobile_chekin > 0)
as.numeric(pf$mobile_chekin)
?length
length(pf$mobile_chekin)
summary(pf$mobile_chekin)
sum(as.numeric(pf$mobile_chekin))
level_counts <- table(pf$mobile_chekin)
level_counts['1']
```
level_counts['1']
level_counts['1']/length(pf$mobile_chekin)
install.packages('ggplot2', dependencies = T)
install.packages("ggplot2", dependencies = T)
y
install.packages('ggplot2', dependencies = T)
library(ggplot2)
data(diamonds)
levels(diamonds$color)
qplot(x = price, data = diamonds$price)
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds)+
scale_x_continuous(breaks=c(250,500,15000))
count_under_250 <- diamonds %>%
filter(price < 250) %>%
nrow()
library(dplyr)
count_under_250 <- diamonds %>%
filter(price < 250) %>%
nrow()
count_under_500 <- diamonds %>%
filter(price < 500) %>%
nrow()
count_more_than_25000 <- diamonds %>%
filter(price > 25000) %>%
nrow()
count_more_than_15000 <- diamonds %>%
filter(price > 15000) %>%
nrow()
# Count diamonds more than 25000
count_more_than_15000 <- diamonds %>%
filter(price >= 15000) %>%
nrow()
highest_price <- max(diamonds$price)
# Filter the dataset to get information about the highest priced diamond(s)
highest_priced_diamond <- diamonds[diamonds$price == highest_price, ]
# Print information about the highest priced diamond
print(highest_priced_diamond)
highest_priced_diamond <- diamonds[diamonds$price == min(diamonds$price), ]
print(highest_priced_diamond)
median_prices <- diamonds %>%
group_by(cut) %>%
summarize(median_price = median(price))
# Find the cut with the lowest median price
lowest_median_cut <- median_prices %>%
filter(median_price == min(median_price))
# Print the cut with the lowest median price
print(lowest_median_cut)
library(ggplot2)
pf <- read.csv('data/pseudo_facebook.tsv', sep = '\t')
aplot(x = age, y = friend_count, data = pf)
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point()
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point() + xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20) + xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) +
coord_trans(x = 'log10', y = 'log10')
ggplot(aes(x = age, y = friend_count), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(x = 'log10', y = 'log10')
ggplot(aes(x = age, y = friend_count), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(x = "log10", y = "log10")
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(x = "log10", y = "log10")
ggplot(aes(x = age, y = friend_count), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(, y = "log10")
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(, y = "log10")
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(y = "sqrt")
```
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_point(
alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') + xlim(13, 90) + coord_trans(y = "sqrt") + geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_point(
alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') + xlim(13, 90) + coord_trans(y = "sqrt") + geom_line(stat = 'summary', fun.y = mean) + geom_line(stat = 'summary', fun.y = quantile(, probs = .1, linetype = 2, color = 'blue'))
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_point(
alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') + xlim(13, 90) + coord_trans(y = "sqrt") + geom_line(stat = 'summary', fun.y = mean) + geom_line(stat = 'summary', fun.y = quantile( probs = .1, linetype = 2, color = 'blue'))
ggplot(aes(x = age, y = friend_count+1), data = pf) + geom_point(
alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') + xlim(13, 90) + coord_trans(y = "sqrt") + geom_line(stat = 'summary', fun.y = mean) + geom_line(stat = 'summary', fun.y = quantile, probs = .1, linetype = 2, color = 'blue')
